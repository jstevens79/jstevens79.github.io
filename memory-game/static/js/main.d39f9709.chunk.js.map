{"version":3,"sources":["styles/index.module.scss","components/_card.module.scss","components/Card.js","TransportationImages.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","appContainer","title","cardContainer","scoreContainer","score","message","flashing","fail","topScore","card","correct","incorrect","hidden","cardContent","shown","Card","_ref","data","clickHandler","displayed","currentClicked","react_default","a","createElement","className","display","style","concat","cardClass","current","id","clickClass","onClick","src","img","alt","TransportationImages","App","_useState","useState","_useState2","Object","slicedToArray","gameStarted","setGameStarted","_useState3","_useState4","cards","setCards","_useState5","_useState6","setScore","_useState7","_useState8","setTopScore","_useState9","_useState10","clicked","setClicked","_useState11","_useState12","setDisplayed","_useState13","_useState14","setCurrentClicked","_useState15","_useState16","gameWon","setGameWon","_useState17","_useState18","gameLost","setGameLost","shuffle","arr","map","Math","random","sort","b","useEffect","length","animationTimer","setTimeout","num","includes","toConsumableArray","styles","components_Card","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d39f9709.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"styles_appContainer__3xrrJ\",\"title\":\"styles_title__8kSDO\",\"cardContainer\":\"styles_cardContainer__1dPBa\",\"scoreContainer\":\"styles_scoreContainer__2Tp-m\",\"score\":\"styles_score__1Z7i4\",\"message\":\"styles_message__O3rTg\",\"flashing\":\"styles_flashing__23rtS\",\"fail\":\"styles_fail__1Vsy2\",\"topScore\":\"styles_topScore__HxZDN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"_card_card__3kWpz\",\"correct\":\"_card_correct__aXOz4\",\"incorrect\":\"_card_incorrect__cCEwc\",\"hidden\":\"_card_hidden__3q-h7\",\"cardContent\":\"_card_cardContent__DewSl\",\"shown\":\"_card_shown__2FBwD\"};","import React from 'react'\nimport style from './_card.module.scss'\n\nfunction Card({data, clickHandler, displayed, currentClicked}) {\n\n  const cardClass = () => {\n    const display = (!displayed) ? style.hidden : ''\n    return `${style.card} ${display}`\n  }\n\n  const clickClass = () => {\n    const display = (displayed) ? style.shown : ''\n    const correct = ((currentClicked.current === data.id) && currentClicked.correct) ? style.correct : ''\n    const incorrect = ((currentClicked.current === data.id) && !currentClicked.correct) ? style.incorrect : ''\n    return `${style.cardContent} ${display} ${correct} ${incorrect}`\n  }\n\n  return (\n    <div className={cardClass()}>\n      <div\n        className={clickClass()}\n        onClick={() => clickHandler(data.id)}>\n        <img src={`img/${data.img}`} alt={data.alt}></img>\n      </div>\n    </div>\n  )\n}\n\nexport default Card","\nexport const TransportationImages = [\n\n  {\n    id: 1,\n    img: 'bike.png',\n    alt: 'bicycle'\n  },\n  {\n    id: 2,\n    img: 'boat.png',\n    alt: 'boat'\n  },\n  {\n    id: 3,\n    img: 'bus.png',\n    alt: 'bus'\n  },\n  {\n    id: 4,\n    img: 'camper.png',\n    alt: 'camper'\n  },\n  {\n    id: 5,\n    img: 'canoe.png',\n    alt: 'canoe'\n  },\n  {\n    id: 6,\n    img: 'car.png',\n    alt: 'car'\n  },\n  {\n    id: 7,\n    img: 'chopper.png',\n    alt: 'chopper'\n  },\n  {\n    id: 8,\n    img: 'firetruck.png',\n    alt: 'firetruck'\n  },\n  {\n    id: 9,\n    img: 'food.png',\n    alt: 'food truck'\n  },\n  {\n    id: 10,\n    img: 'motorcyle.png',\n    alt: 'motorcycle'\n  },\n  {\n    id: 11,\n    img: 'plane.png',\n    alt: 'plane'\n  },\n  {\n    id: 12,\n    img: 'police.png',\n    alt: 'police'\n  },\n  {\n    id: 13,\n    img: 'school.png',\n    alt: 'school bus'\n  },\n  {\n    id: 14,\n    img: 'scooter.png',\n    alt: 'scooter'\n  },\n  {\n    id: 15,\n    img: 'taxi.png',\n    alt: 'taxi'\n  },\n  {\n    id: 16,\n    img: 'unicycle.png',\n    alt: 'unicycle'\n  }\n\n\n]","import React, { useState, useEffect } from 'react'\nimport Card from './components/Card'\nimport styles from './styles/index.module.scss'\n\nimport {TransportationImages} from './TransportationImages'\n\nfunction App() {\n  const [gameStarted, setGameStarted] = useState(false)\n  const [cards, setCards] = useState([])\n  const [score, setScore] = useState(0)\n  const [topScore, setTopScore] = useState(0)\n  const [clicked, setClicked] = useState([])\n  const [displayed, setDisplayed] = useState(false)\n  const [currentClicked, setCurrentClicked] = useState({current: null, correct: false})\n  const [gameWon, setGameWon] = useState(false)\n  const [gameLost, setGameLost] = useState(false)\n\n  const shuffle = arr => {\n    const Shuffled = arr.map(a => [Math.random(), a])\n      .sort((a, b) => a[0] - b[0])\n      .map(a => a[1])\n    return Shuffled\n    \n  }\n\n  // shuffle for the initial render\n  // new way of handling componentDidMount\n  useEffect(() => {\n    setCards(shuffle(TransportationImages))\n    setDisplayed(true)\n  }, [])\n\n  // handle wins & losses\n  useEffect(() => {\n    if (score === TransportationImages.length) {\n      setGameWon(true)\n    }\n  }, [score])\n  \n  const animationTimer = () => {\n    setDisplayed(false)\n    setTimeout(() => {\n      setCards(shuffle(TransportationImages))\n      setCurrentClicked({current: null, correct: false})\n      setTimeout(() => {\n        setDisplayed(true)\n      }, 100)\n    }, 400)\n  }\n\n\n  const clickHandler = num => {\n    setGameLost(false)\n    setGameWon(false)\n    setGameStarted(true)\n    if (!clicked.includes(num)) {\n      setCurrentClicked({current: num, correct: true})\n      setScore(score + 1)\n      if ((score + 1) > topScore) setTopScore(score + 1)\n      setClicked([...clicked, num])\n      animationTimer()\n    } else {\n      setCurrentClicked({current: num, correct: false})\n      setScore(0);\n      setGameLost(true)\n      setClicked([])\n      animationTimer()\n    }\n  }\n\n  return (\n      <div className={styles.appContainer}>\n      <div className={styles.title}>Memory Test</div>\n      <div className={styles.cardContainer}>\n        {cards.map(card => {\n          return (\n            <Card\n              key={`card${card.id}`}\n              data={card}\n              displayed={displayed}\n              clickHandler={clickHandler}\n              currentClicked={currentClicked}\n            />\n          )\n        })}\n      </div>\n      <div className={styles.scoreContainer}>\n        <span className={styles.score}>Score: {score}</span>\n          {!gameStarted &&\n            <span className={styles.message}>Click an image to get started!</span>\n          }\n          {gameWon &&\n            <span className={styles.message}>Good job! Click an image to try again!</span>\n          }\n          {gameLost &&\n            <span className={`${styles.message} ${styles.fail}`}>Sorry, you lost. Click an image to try again!</span>\n          }\n        <span className={styles.topScore}>Top Score: {topScore}</span>\n      </div>\n    </div>    \n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}